@inject NavigationManager NavigationManager
@if (server != null)
{
    <li @key="server.ServerId" style="background-color: @GetBackgroundColor()">
     @server.Name in @server.City is
                <span style="color:@((server.IsOnline ? "green" : "red"))">
                    @(server.IsOnline ? "online" : "offline")
                </span>
                &nbsp;
                <a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>
                &nbsp;
        @if (server.IsOnline)
        {
            <button type="button"
                    class="btn btn-outline-danger"
                    @onclick="@(()=> {server.IsOnline = false;})">
                Turn Off
            </button>
        }
        else
        {
            <button type="button"
                    class="btn btn-outline-success"
                    @onclick="@(()=> {server.IsOnline = true;})">
                Turn On
            </button>
        }
        &nbsp;
                <EditForm Model="server"
                          FormName="@($"form-server-{server.ServerId}")"
                          OnValidSubmit="@(() => { DeleteServer(server.ServerId); })">
                    <button type="submit" class="btn btn-primary">Delete</button>
                </EditForm>
                </li>
}
@code {
    [Parameter]
    public Server? server { get; set; } 
    [CascadingParameter(Name = "SelectedCity")]
    public string? SelectedCity { get; set; }

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/servers", true);
        }
    }
    private string GetBackgroundColor()
    {
        if (SelectedCity != null)
        {
            switch (this.SelectedCity)
            {
                case "Toronto": return "powderblue";
                case "Montreal": return "lightgray";
                case "Ottawa": return "palegreen";
                case "Calgary": return "pink";
                case "Halifax": return "white";
                default:
                    return "white";
            }
        }
        else
        {
            return "white";
        }
    }

}

